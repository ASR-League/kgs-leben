declare interface WebComponentRegisterOptions {
    prototype: Function;
    extends?: string;
}

declare interface HTMLDocumentWithPolyfills {
    registerElement: (tagName: string, options: WebComponentRegisterOptions) => void;

    createElement(tagName: "a", customElement: string): HTMLAnchorElement;
    createElement(tagName: "abbr", customElement: string): HTMLPhraseElement;
    createElement(tagName: "acronym", customElement: string): HTMLPhraseElement;
    createElement(tagName: "address", customElement: string): HTMLBlockElement;
    createElement(tagName: "applet", customElement: string): HTMLAppletElement;
    createElement(tagName: "area", customElement: string): HTMLAreaElement;
    createElement(tagName: "audio", customElement: string): HTMLAudioElement;
    createElement(tagName: "b", customElement: string): HTMLPhraseElement;
    createElement(tagName: "base", customElement: string): HTMLBaseElement;
    createElement(tagName: "basefont", customElement: string): HTMLBaseFontElement;
    createElement(tagName: "bdo", customElement: string): HTMLPhraseElement;
    createElement(tagName: "big", customElement: string): HTMLPhraseElement;
    createElement(tagName: "blockquote", customElement: string): HTMLBlockElement;
    createElement(tagName: "body", customElement: string): HTMLBodyElement;
    createElement(tagName: "br", customElement: string): HTMLBRElement;
    createElement(tagName: "button", customElement: string): HTMLButtonElement;
    createElement(tagName: "canvas", customElement: string): HTMLCanvasElement;
    createElement(tagName: "caption", customElement: string): HTMLTableCaptionElement;
    createElement(tagName: "center", customElement: string): HTMLBlockElement;
    createElement(tagName: "cite", customElement: string): HTMLPhraseElement;
    createElement(tagName: "code", customElement: string): HTMLPhraseElement;
    createElement(tagName: "col", customElement: string): HTMLTableColElement;
    createElement(tagName: "colgroup", customElement: string): HTMLTableColElement;
    createElement(tagName: "datalist", customElement: string): HTMLDataListElement;
    createElement(tagName: "dd", customElement: string): HTMLDDElement;
    createElement(tagName: "del", customElement: string): HTMLModElement;
    createElement(tagName: "dfn", customElement: string): HTMLPhraseElement;
    createElement(tagName: "dir", customElement: string): HTMLDirectoryElement;
    createElement(tagName: "div", customElement: string): HTMLDivElement;
    createElement(tagName: "dl", customElement: string): HTMLDListElement;
    createElement(tagName: "dt", customElement: string): HTMLDTElement;
    createElement(tagName: "em", customElement: string): HTMLPhraseElement;
    createElement(tagName: "embed", customElement: string): HTMLEmbedElement;
    createElement(tagName: "fieldset", customElement: string): HTMLFieldSetElement;
    createElement(tagName: "font", customElement: string): HTMLFontElement;
    createElement(tagName: "form", customElement: string): HTMLFormElement;
    createElement(tagName: "frame", customElement: string): HTMLFrameElement;
    createElement(tagName: "frameset", customElement: string): HTMLFrameSetElement;
    createElement(tagName: "h1", customElement: string): HTMLHeadingElement;
    createElement(tagName: "h2", customElement: string): HTMLHeadingElement;
    createElement(tagName: "h3", customElement: string): HTMLHeadingElement;
    createElement(tagName: "h4", customElement: string): HTMLHeadingElement;
    createElement(tagName: "h5", customElement: string): HTMLHeadingElement;
    createElement(tagName: "h6", customElement: string): HTMLHeadingElement;
    createElement(tagName: "head", customElement: string): HTMLHeadElement;
    createElement(tagName: "hr", customElement: string): HTMLHRElement;
    createElement(tagName: "html", customElement: string): HTMLHtmlElement;
    createElement(tagName: "i", customElement: string): HTMLPhraseElement;
    createElement(tagName: "iframe", customElement: string): HTMLIFrameElement;
    createElement(tagName: "img", customElement: string): HTMLImageElement;
    createElement(tagName: "input", customElement: string): HTMLInputElement;
    createElement(tagName: "ins", customElement: string): HTMLModElement;
    createElement(tagName: "isindex", customElement: string): HTMLIsIndexElement;
    createElement(tagName: "kbd", customElement: string): HTMLPhraseElement;
    createElement(tagName: "keygen", customElement: string): HTMLBlockElement;
    createElement(tagName: "label", customElement: string): HTMLLabelElement;
    createElement(tagName: "legend", customElement: string): HTMLLegendElement;
    createElement(tagName: "li", customElement: string): HTMLLIElement;
    createElement(tagName: "link", customElement: string): HTMLLinkElement;
    createElement(tagName: "listing", customElement: string): HTMLBlockElement;
    createElement(tagName: "map", customElement: string): HTMLMapElement;
    createElement(tagName: "marquee", customElement: string): HTMLMarqueeElement;
    createElement(tagName: "menu", customElement: string): HTMLMenuElement;
    createElement(tagName: "meta", customElement: string): HTMLMetaElement;
    createElement(tagName: "nextid", customElement: string): HTMLNextIdElement;
    createElement(tagName: "nobr", customElement: string): HTMLPhraseElement;
    createElement(tagName: "object", customElement: string): HTMLObjectElement;
    createElement(tagName: "ol", customElement: string): HTMLOListElement;
    createElement(tagName: "optgroup", customElement: string): HTMLOptGroupElement;
    createElement(tagName: "option", customElement: string): HTMLOptionElement;
    createElement(tagName: "p", customElement: string): HTMLParagraphElement;
    createElement(tagName: "param", customElement: string): HTMLParamElement;
    createElement(tagName: "plaintext", customElement: string): HTMLBlockElement;
    createElement(tagName: "pre", customElement: string): HTMLPreElement;
    createElement(tagName: "progress", customElement: string): HTMLProgressElement;
    createElement(tagName: "q", customElement: string): HTMLQuoteElement;
    createElement(tagName: "rt", customElement: string): HTMLPhraseElement;
    createElement(tagName: "ruby", customElement: string): HTMLPhraseElement;
    createElement(tagName: "s", customElement: string): HTMLPhraseElement;
    createElement(tagName: "samp", customElement: string): HTMLPhraseElement;
    createElement(tagName: "script", customElement: string): HTMLScriptElement;
    createElement(tagName: "select", customElement: string): HTMLSelectElement;
    createElement(tagName: "small", customElement: string): HTMLPhraseElement;
    createElement(tagName: "source", customElement: string): HTMLSourceElement;
    createElement(tagName: "span", customElement: string): HTMLSpanElement;
    createElement(tagName: "strike", customElement: string): HTMLPhraseElement;
    createElement(tagName: "strong", customElement: string): HTMLPhraseElement;
    createElement(tagName: "style", customElement: string): HTMLStyleElement;
    createElement(tagName: "sub", customElement: string): HTMLPhraseElement;
    createElement(tagName: "sup", customElement: string): HTMLPhraseElement;
    createElement(tagName: "table", customElement: string): HTMLTableElement;
    createElement(tagName: "tbody", customElement: string): HTMLTableSectionElement;
    createElement(tagName: "td", customElement: string): HTMLTableDataCellElement;
    createElement(tagName: "textarea", customElement: string): HTMLTextAreaElement;
    createElement(tagName: "tfoot", customElement: string): HTMLTableSectionElement;
    createElement(tagName: "th", customElement: string): HTMLTableHeaderCellElement;
    createElement(tagName: "thead", customElement: string): HTMLTableSectionElement;
    createElement(tagName: "title", customElement: string): HTMLTitleElement;
    createElement(tagName: "tr", customElement: string): HTMLTableRowElement;
    createElement(tagName: "track", customElement: string): HTMLTrackElement;
    createElement(tagName: "tt", customElement: string): HTMLPhraseElement;
    createElement(tagName: "u", customElement: string): HTMLPhraseElement;
    createElement(tagName: "ul", customElement: string): HTMLUListElement;
    createElement(tagName: "var", customElement: string): HTMLPhraseElement;
    createElement(tagName: "video", customElement: string): HTMLVideoElement;
    createElement(tagName: "x-ms-webview"): MSHTMLWebViewElement;
    createElement(tagName: "xmp", customElement: string): HTMLBlockElement;
    createElement(tagName: string, customElement: string): HTMLElement;
}
